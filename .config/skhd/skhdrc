#SKHD STUFF

# if you're having troubles finding key codes for a key just type skhd --observe in a terminal and type a key. Pretty cool! Or just check the wiki.

## HYPER == SHIFT + CMD + ALT + OPTION

## Quickly restart the yabai launch agent
ctrl + alt + cmd - r : launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

## Close active application
###hyper - backspace : $(yabai -m window $(yabai -m query --windows --window | jq -re ".id") --close)

:: gathering @
lalt - g ; gathering
gathering < escape ; default

gathering < 1 : /Users/antoni.rozanski/.config/custom_scripts/move_all_app_windows.py gather display 1 ; skhd -k "escape"
gathering < 2 : /Users/antoni.rozanski/.config/custom_scripts/move_all_app_windows.py gather display 2 ; skhd -k "escape"
gathering < 3 : /Users/antoni.rozanski/.config/custom_scripts/move_all_app_windows.py gather display 3 ; skhd -k "escape"
gathering < x : terminal-notifier -message "in gathering mode - x" ; skhd -k "escape"

:: redshift @
lalt - r ; redshift 
redshift < escape ; default

redshift < 1 : redshift -PO 1300 -b 0.6 && terminal-notifier -message "redshift 1" 
redshift < 2 : redshift -PO 2300 -b 0.7 && terminal-notifier -message "redshift 2" 
redshift < 3 : redshift -PO 3300 -b 0.8 && terminal-notifier -message "redshift 3" 
redshift < 4 : redshift -PO 4300 -b 0.8 && terminal-notifier -message "redshift 4" 
redshift < x : redshift -PO 6500 -b 1.0 && terminal-notifier -message "redshift x" 

:: apps @ : terminal-notifier -message "App mode..."
lalt - f ; apps
apps < escape ; default

apps < z : /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome "https://allegro.zoom.us/j/2307799018?pwd=ejRrR2ZYSzMzUHJZTzdVZnJPSmZSQT09" --profile-directory=Default; terminal-notifier -message "Opening zoom..."; skhd -k "escape"
apps < j : /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome https://jira.allegrogroup.com/secure/RapidBoard.jspa\?rapidView\=4105\&quickFilter\=22714 --profile-directory=Defaul --profile-directory=Default; terminal-notifier -message "Opening jira..."; skhd -k "escape"
apps < g : /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome https://github.com/pulls\?q\=is%3Aopen+is%3Apr+review-requested%3Aarozans+archived%3Afalse+-team-review-requested%3Aallegro-internal%2Fzakon-konia --profile-directory=Defaul --profile-directory=Default; terminal-notifier -message "Opening gh..."; skhd -k "escape"
apps < k : /Applications/Google\ Chrome.app/Contents/MacOS/Google\ Chrome https://allegro.slack.com/archives/G01R82F8LS0 --profile-directory=Defaul --profile-directory=Default; terminal-notifier -message "Opening zakon-konia-rovate..."; skhd -k "escape"

#lalt - j : yabai -m window --focus south
#lalt - k : yabai -m window --focus north
#lalt - l : yabai -m window --focus east
#lalt - h : yabai -m window --focus west


# test a command
#lshift - v : terminal-notifier -message "lshift - v"
lalt - x : /Users/antoni.rozanski/.config/custom_scripts/move_all_app_windows.py close_other display 2
#alt - 1 : terminal-notifier -message "alt - 1"
lalt - o : terminal-notifier -message "lalt - o"
#ralt - 3 : terminal-notifier -message "ralt - 3"
#lshift - x : terminal-notifier -message "$(yabai -m query --windows --window | jq -re ".id")"#

#lalt - 0x2A : terminal-notifier -message "lalt - \\"
lalt - 0x1E : skhd --key 0x2A
lalt - 0x26 : skhd --key "0x7D"
lalt - 0x28 : skhd --key "0x7E"
lshift + lalt - 0x1E : skhd --key "shift - 0x2A"
lshift + lalt - k : ~/.config/keybord_remapping/hidutil.sh && terminal-notifier -message "hidutil remapping activated"
## open terminal
#hyper - return : /Applications/iTerm.app/Contents/MacOS/iTerm2
# alt - 1 : /Applications/iTerm.app/Contents/MacOS/iTerm2
lalt - 1 : open -a 'Google Chrome.app'
lalt - 2 : open -a 'Slack.app'
lalt - 6 : open -a 'Spotify.app'
lalt - 3 : open -a 'IntelliJ IDEA.app'
lalt - 4 : open -a 'iTerm.app'
lalt - 5 : open -a 'zoom.us.app'

## swap window
###hyper - y : yabai -m window --swap west
# shift + alt - j : yabai -m window --swap south
# shift + alt - k : yabai -m window --swap north
###hyper - 0x21 : yabai -m window --swap east # 0x21 is the "[" key

## send window to monitor and follow focus
###hyper - u : /Users/jesseskelton/CustomScripts/SwitchSpaces/moveWindowLeftAndFollowFocus.sh
###hyper - p : /Users/jesseskelton/CustomScripts/SwitchSpaces/moveWindowRightAndFollowFocus.sh

## focus display
lalt + cmd - q : yabai -m window --display 1 yabai -m display --focus 1
lalt + cmd - w : yabai -m window --display 2 yabai -m display --focus 2
lalt + cmd - e : yabai -m window --display 3 yabai -m display --focus 3

## increase window size
#shift + alt - a : yabai -m window --resize left:-20:0
#shift + alt - s : yabai -m window --resize bottom:0:20
#shift + alt - w : yabai -m window --resize top:0:-20
#shift + alt - d : yabai -m window --resize right:20:0

## decrease window size
#shift + cmd - a : yabai -m window --resize left:20:0
#shift + cmd - s : yabai -m window --resize bottom:0:-20
#shift + cmd - w : yabai -m window --resize top:0:20
#shift + cmd - d : yabai -m window --resize right:-20:0

## rotate tree 90
lalt - r : yabai -m space --rotate 90

## flip the tree vertically
###hyper - 4 : yabai -m space --mirror y-axis
# mirror tree y-axis
lalt - y : yabai -m space --mirror y-axis
## mirror tree x-axis
lalt - u : yabai -m space --mirror x-axis

#Move active window to next space on current display
###shift + lalt + lcmd + ctrl + ralt - 1 : yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '1' ]]; then yabai -m window --space 2; elif [[ '{}' = '2' ]]; then yabai -m window --space 1; fi"
###shift + lalt + lcmd + ctrl + ralt - 2 : yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '3' ]]; then yabai -m window --space 4; elif [[ '{}' = '4' ]]; then yabai -m window --space 3; fi"
###shift + lalt + lcmd + ctrl + ralt - 3 : yabai -m query --spaces --space | jq -re ".index" | xargs -I {} bash -c "if [[ '{}' = '5' ]]; then yabai -m window --space 6; elif [[ '{}' = '6' ]]; then yabai -m window --space 5; fi"

# show next space per display
#hyper - 1 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocus.sh 1
#hyper - 2 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocus.sh 2
#hyper - 3 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocus.sh 3
###ctrl + alt + cmd + lshift - 1 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocusSIP.sh 1
###ctrl + alt + cmd + lshift - 2 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocusSIP.sh 2
###ctrl + alt + cmd + lshift - 3 : /Users/jesseskelton/CustomScripts/SwitchSpaces/switchAndFocusSIP.sh 3

## toggle window fullscreen zoom
lalt - f : yabai -m window --toggle zoom-fullscreen

# cycle through windows
# cycle backwards
#hyper - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
#hyper - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

#alt - p : yabai -m window --focus stack.prev || yabai -m window --focus prev || yabai -m window --focus last
#
# go to each window WITHOUT going into a stack
# ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
###ctrl + alt + cmd + lshift - i : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# ctrl + alt + cmd + rshift - i : yabai -m window --focus stack.prev || yabai -m window --focus stack.last

#hyper - 0x29 : yabai -m query --spaces \
#hyper - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

#alt - n : yabai -m window --focus stack.next || yabai -m window --focus next || yabai -m window --focus first

# go to each window WITHOUT going into a stack
# ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select((.\"stack-index\" <= 1) and (.app != \"Hammerspoon\"))]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}
###ctrl + alt + cmd + lshift - o : yabai -m query --spaces | jq -re ".[] | select(.visible == 1).index" | xargs -I{} yabai -m query --windows --space {} | jq -re "[.[] | select(.app != \"Hammerspoon\")]" | jq -sre "add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id" | xargs -I{} yabai -m window --focus {}

# Toggle foucus on a stack
###ctrl + alt + cmd + lshift - return : yabai -m window --focus stack.next || yabai -m window --focus stack.first

#create a stack
# ctrl + alt + cmd + rshift - 1 : yabai -m query --windows --window | jq -re "." | xargs -I{} yabai -m window 1 --stack {}
# stack next window onto current window
###ctrl + alt + cmd + lshift - 0x43 : window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window east --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)

################################################################
############################# UNUSED ###########################
################################################################

## float / unfloat window and center on screen
#alt - t : yabai -m window --toggle float;\
#yabai -m window --grid 4:4:1:1:2:2 ## toggle sticky alt - s : yabai -m window --toggle sticky ## toggle sticky, float and resize to picture-in-picture size alt - p : yabai -m window --toggle sticky;\ yabai -m window --grid 5:5:4:0:1:1 ## change layout of desktop ctrl + alt - a : yabai -m space --layout bsp ctrl + alt - d : yabai -m space --layout float

## toggle window split type
lalt - e : yabai -m window --toggle split
lalt - s : yabai -m space --layout stack
lalt - b : yabai -m space --layout bsp

## toggle window border
#shift + alt - b : yabai -m window --toggle border

ctrl + alt + cmd - s : terminal-notifier -message "sleeping..."; pmset sleepnow

## create desktop, move window and follow focus
#shift + cmd - n : yabai -m space --create && \
#index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#yabai -m window --space "${index}" && \
#yabai -m space --focus "${index}"

## create desktop and follow focus
#shift + alt - n : yabai -m space --create && \
#index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#yabai -m space --focus "${index}"

## destroy desktop
#cmd + alt - w : yabai -m space --destroy

## fast focus desktop
#cmd + alt - x : yabai -m space --focus last
#cmd + alt - z : yabai -m space --focus prev
#cmd + alt - c : yabai -m space --focus next
#cmd + alt - 1 : yabai -m space --focus 1
#cmd + alt - 2 : yabai -m space --focus 2
#cmd + alt - 3 : yabai -m space --focus 3
#cmd + alt - 4 : yabai -m space --focus 4
#cmd + alt - 5 : yabai -m space --focus 5
#cmd + alt - 6 : yabai -m space --focus 6
#cmd + alt - 7 : yabai -m space --focus 7
#cmd + alt - 8 : yabai -m space --focus 8
#cmd + alt - 9 : yabai -m space --focus 9
#cmd + alt - 0 : yabai -m space --focus 10

## move window
#shift + ctrl - a : yabai -m window --move rel:-20:0
#shift + ctrl - s : yabai -m window --move rel:0:20
#shift + ctrl - w : yabai -m window --move rel:0:-20
#shift + ctrl - d : yabai -m window --move rel:20:0

## Swap window
# hyper - y : yabai -m window --warp west
# shift + cmd - j : yabai -m window --warp south
# shift + cmd - k : yabai -m window --warp north
# hyper - 0x21 : yabai -m window --warp east # "[" key

## focus monitor
#ctrl + alt - x  : yabai -m display --focus last
#ctrl + alt - z  : yabai -m display --focus prev || yabai -m display --focus last
#ctrl + alt - c  : yabai -m display --focus next || yabai -m display --focus first
#ctrl + alt - 1  : yabai -m display --focus 1
#ctrl + alt - 2  : yabai -m display --focus 2
#ctrl + alt - 3  : yabai -m display --focus 3

